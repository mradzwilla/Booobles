var game = new Phaser.Game(800, 600, Phaser.AUTO, '', { preload: preload, create: create, update: update});

function preload(){
  game.load.spritesheet('redBubble', "<%= asset_path('redBubble.png') %>")
  game.load.spritesheet('yellowBubble', "<%= asset_path('yellowBubble.png') %>")
  game.load.spritesheet('blueBubble', "<%= asset_path('blueBubble.png') %>")
  game.load.spritesheet('greenBubble', "<%= asset_path('greenBubble.png') %>")
  game.load.spritesheet('purpleBubble', "<%= asset_path('purpleBubble.png') %>")
  game.load.spritesheet('orangeBubble', "<%= asset_path('orangeBubble.png') %>")
  game.load.spritesheet('tealBubble', "<%= asset_path('tealBubble.png') %>")
  game.load.image('menuScreen', "<%= asset_path('mainMenu.png') %>")
  game.load.image('startButton', "<%= asset_path('startButton.png') %>")

  game.stage.backgroundColor = '#C8FDF8' 
  game.state.add("mainMenu", mainMenu)
  game.state.add("myGame", myGame)
  // game.state.add("replayMenu", replayMenu)
}

function create(){
  game.state.start('mainMenu')
}

var myGame = {

  create: function(){
    game.stage.backgroundColor = '#C8FDF8' 
    circleCount = 1
    score = 0
    level = 1
    timeLeft = 10
    bubbles = game.add.group();
    currentColor = ''
    pickThisColor = ''
    currentColorDisplay = game.add.graphics(12.5,14)

    timeDisplay = game.add.text(50,50, timeLeft)
    scoreDisplay = game.add.text(15, 130, 'Score: '+ score)

    greenBubble = {
      sprite: 'greenBubble',
      colorCode: '26d514'
    }

    purpleBubble = {
      sprite: 'purpleBubble',
      colorCode: 'bc12b6'
    }

    orangeBubble = {
      sprite: 'orangeBubble',
      colorCode: 'fbae34'
    }    

    tealBubble = {
      sprite: 'tealBubble',
      colorCode: '21d4c1'
    }
    // existingBubbles = []
    //bubbleArray contains existing bubbles. Each object contains a sprite and the corresponding color
    //New objects can later be added to the array to increase difficulty
    
    bubbleArray = [
      { sprite: 'redBubble',
        colorCode: 'ff0000'
      },
      { sprite: 'yellowBubble',
        colorCode: 'ebf30a'
      },
      { sprite: 'blueBubble',
        colorCode: '186fe5'
      }
    ]

    function countdown(){
    	timeLeft -= 1
      updateTimeDisplay();
    	if (timeLeft == 0){
    		timer.destroy();
        game.state.states['mainMenu'].lostBecause = "You ran out of time!"
        game.state.start('mainMenu')
    	}
    }

    function updateTimeValue(){
        if (level == 1){
          timeLeft = 10
        } else if (level == 2){
          timeLeft = 8
        } else if (level == 3){
          timeLeft = 8
        }
    }

    function updateTimeDisplay(){
      timeDisplay.destroy()
      timeDisplay = game.add.text(50,50, timeLeft)
    }

    function updateColor(){
      // currentColorDisplay.kill()
      if (bubbles.length >= 1){
        // var bubbleIdx = game.rnd.integerInRange(0, bubbles.length-1)
        var bubbleIdx = Math.floor(Math.random()*bubbles.length)
        var randBubble = bubbles.children[bubbleIdx]
        pickThisColor = randBubble.colorCode
        currentColorDisplay.beginFill("0x"+ randBubble.colorCode);
        currentColorDisplay.drawRect(0, 0, 100, 100)
     }
    }

    function updateScoreDisplay(){
      scoreDisplay.destroy()
      scoreDisplay = game.add.text(15, 130, 'Score: ' + score)
    }

   	function drawCircles(circleCount){

   		for (i=0; i < circleCount; i++){


      // var bubbleIdx = game.rnd.integerInRange(0, bubbleArray.length-1)

      var newBubble = bubbleArray[game.rnd.integerInRange(0, bubbleArray.length-1)]

      var newSprite = bubbles.create( game.rnd.integerInRange(50, 750),  game.rnd.integerInRange(50, 550), newBubble.sprite);
        newSprite.colorCode = newBubble.colorCode
        newSprite.scale.setTo(.5)
        // newSprite.anchor.setTo(0.5, .5);
        newSprite.inputEnabled = true;
        newSprite.input.useHandCursor = true;
        newSprite.events.onInputDown.add(resetTimer, this);
        // existingBubbles.push(newSprite)

        if (i == 0){
          currentColorDisplay.beginFill("0x"+newBubble.colorCode);
          currentColorDisplay.drawRect(0, 0, 100, 100)
          pickThisColor = newBubble.colorCode
        }
   		}
   	}

   	drawCircles(circleCount)
    // Create a custom timer
    timer = game.time.create();
    
  	var firstTimer = game.time.events.loop(250, countdown, this)

    timer.start();

    function resetTimer(e){
      
      if (e.colorCode == pickThisColor){
        //If bubble clicked matches the selected color
        updateScoreValue();
        updateScoreDisplay();

        e.destroy()
        bubbles.remove(e)

        updateTimeValue();
        updateTimeDisplay();
        updateColor();

        //If screen is clear, update level information
        if (bubbles.length == 0) {
           levelManager();
        };

      } else {
        timer.destroy();
        game.state.states['mainMenu'].lostBecause = "You picked the wrong color!"
        game.state.start('mainMenu');
      }
  	}

    function updateScoreValue(){
      //This probably doesn't need to be it's own function
      score += (bubbles.length * level)
    }

    function levelManager(){
        //If screen is cleared
        if (level == 1){

          if (circleCount == 8){
            bubbleArray.push(purpleBubble)
            bubbleArray.push(greenBubble)
            level = 2
            circleCount = 0
            //Set to 0 because 1 will be added at end of function
          }
        }

        if (level == 2){
            if (circleCount == 8){
              bubbleArray.push(orangeBubble)
              bubbleArray.push(tealBubble)
              level = 3
              circleCount = 0
            }
        }

        // if (level == 3){
        // }
          circleCount += 1
          drawCircles(circleCount)
    }
  }
}

var mainMenu = {
  create: function(){
    var image = game.add.sprite(0,0,'menuScreen')
    var start = game.add.button(250,280,'startButton', startNewGame)

    if (typeof score !== 'undefined'){
      //Test for score to se if they were redirected to the menu
      var scoreBubble = game.add.sprite(560,300, 'yellowBubble')
      var lostBubble = game.add.sprite(20,300, 'tealBubble')
      lostBubble.scale.setTo(.8)
      scoreBubble.scale.setTo(.8)
      var scoreText = game.add.text(620, 360, 'Score:\n    '+ score, { fontSize: '32px', fill: '#c227af' })
      var lostText = game.add.text(70,330, this.lostBecause, {fill: '#c227af', wordWrap: true, wordWrapWidth: 130})

    }

    // game.input.onDown.add(startNewGame, this);

    function startNewGame(){
      game.state.start('myGame');
    }

  }
}

var replayMenu = {

}
function update(){

}